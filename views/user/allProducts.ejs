<%- include("../partials/userHeader.ejs")%>
<div class="relative flex justify-end items-center mr-20">
  <button
    id="dropdownDefaultButton"
    data-dropdown-toggle="dropdown"
    class="text-black w-52 font-medium rounded-lg text-sm px-5 py-2.5 text-center flex justify-end items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
    type="button"
  >
    Sort By
    <svg
      class="w-2.5 h-2.5 ms-3"
      aria-hidden="true"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 10 6"
    >
      <path
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="m1 1 4 4 4-4"
      />
    </svg>
  </button>

  <!-- Dropdown menu -->
  <div
    id="dropdown"
    class="absolute right-0 top-10 z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-40 dark:bg-gray-700"
  >
    <ul
      class="py-2 text-sm text-gray-700 dark:text-gray-200"
      aria-labelledby="dropdownDefaultButton"
    >
      <li>
        <a
          href="javascript:void(0)"
          class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
          onclick="sortBy('ascending')"
          >Price: Low to High</a
        >
      </li>
      <li>
        <a
          href="javascript:void(0)"
          class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
          onclick="sortBy('descending')"
          >Price: High to Low</a
        >
      </li>
    </ul>
  </div>
</div>
<div class="container flex">
  <div id="filterDiv" class="filter-container w-1/6">
    <div class="border-t border-gray-200 px-4 py-6">
      <h3 class="-mx-2 -my-3 flow-root">
        <!-- Expand/collapse section button -->
        <button
          type="button"
          class="flex w-full items-center justify-between bg-white px-2 py-3 text-gray-400 hover:text-gray-500"
          aria-controls="filter-section-mobile-0"
          aria-expanded="false"
          onclick="brandFilterDropdown()"
        >
          <span class="font-medium text-gray-900">Brand</span>
          
        </button>
      </h3>
      <!-- Filter section, show/hide based on section state. -->
      <div class="pt-3" id="filter-section-mobile-0">
        <div class="space-y-1">
          <% for (i = 0; i < brand.length; i++) { %>
          <div class="flex items-center">
            <input
              id="brand-<%= brand[i].name %>"
              name="<%= brand[i].name %>"
              value="brand-<%= brand[i]._id %>"
              type="checkbox"
              class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
            />
            <label
              for="filter-mobile-brand-0"
              class="ml-3 min-w-0 flex-1 text-gray-500"
              ><%= brand[i].name %></label
            >
          </div>
          <% } %>
        </div>
      </div>
    </div>
    <div class="border-t border-gray-200 px-4 py-6">
      <h3 class="-mx-2 -my-3 flow-root">
        <!-- Expand/collapse section button -->
        <button
          type="button"
          class="flex w-full items-center justify-between bg-white px-2 py-3 text-gray-400 hover:text-gray-500"
          aria-controls="filter-section-mobile-1"
          aria-expanded="false"
          onclick="categoryFilterDropdown()"
        >
          <span class="font-medium text-gray-900">Category</span>
        </button>
      </h3>
      <!-- Filter section, show/hide based on section state. -->
      <div class="pt-3" id="filter-section-mobile-1">
        <div class="space-y-1">
          <% for (i = 0; i < categories.length; i++) { %>
          <div class="flex items-center">
            <input id="category-<%= categories[i].name %>" name="<%=
            categories[i].name %>" type="checkbox" value="category-<%=
            categories[i]._id %>" class="h-4 w-4 rounded border-gray-300
            text-indigo-600 focus:ring-indigo-500" />
            <label
              for="filter-mobile-category-0"
              class="ml-3 min-w-0 flex-1 text-gray-500"
              ><%= categories[i].name %></label
            >
          </div>
          <% } %>
        </div>
      </div>
    </div>
    <div class="border-t border-gray-200 px-4 py-6">
      <h3 class="-mx-2 -my-3 flow-root">
        <!-- Expand/collapse section button -->
        <button
          type="button"
          class="flex w-full items-center justify-between bg-white px-2 py-3 text-gray-400 hover:text-gray-500"
          aria-controls="filter-section-mobile-2"
          aria-expanded="false"
          onclick="sizeFilterDropdown()"
        >
          <span class="font-medium text-gray-900">Size</span>
        </button>
      </h3>
      <!-- Filter section, show/hide based on section state. -->
      <div class="pt-3" id="filter-section-mobile-2">
        <div class="space-y-1">
          <div class="flex items-center">
            <input
              id="size-6"
              name="size[]"
              value="size-6"
              type="checkbox"
              class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
            />
            <label
              for="filter-mobile-size-0"
              class="ml-3 min-w-0 flex-1 text-gray-500"
              >6</label
            >
          </div>
          <div class="flex items-center">
            <input
              id="size-7"
              name="size[]"
              value="size-7"
              type="checkbox"
              class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
            />
            <label
              for="filter-mobile-size-1"
              class="ml-3 min-w-0 flex-1 text-gray-500"
              >7</label
            >
          </div>
          <div class="flex items-center">
            <input
              id="size-8"
              name="size[]"
              value="size-8"
              type="checkbox"
              class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
            />
            <label
              for="filter-mobile-size-2"
              class="ml-3 min-w-0 flex-1 text-gray-500"
              >8</label
            >
          </div>
          <div class="flex items-center">
            <input
              id="size-9"
              name="size[]"
              value="size-9"
              type="checkbox"
              class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
            />
            <label
              for="filter-mobile-size-3"
              class="ml-3 min-w-0 flex-1 text-gray-500"
              >9</label
            >
          </div>

          <div class="flex items-center">
            <input
              id="size-10"
              name="size[]"
              value="size-10"
              type="checkbox"
              class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
            />
            <label
              for="filter-mobile-size-5"
              class="ml-3 min-w-0 flex-1 text-gray-500"
              >10</label
            >
          </div>
          <div class="flex items-center">
            <input
              id="size-11"
              name="size[]"
              value="size-11"
              type="checkbox"
              class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500"
            />
            <label
              for="filter-mobile-size-5"
              class="ml-3 min-w-0 flex-1 text-gray-500"
              >11</label
            >
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="product-container flex-1 ml-10">
    <div id="productGrid" class="grid grid-cols-3 mt-5 w-11/12 h-5/6 gap-10">
      <% for (i = 0; i < product.length; i++) { %>
      <a
        href="/user/singleProductDetails/<%= product[i]._id %>"
        class="group relative h-[370px] block overflow-hidden"
      >
        <img
          src="/img/products/<%= product[i].frontImage %>"
          alt=""
          class="h-1.5 w-full object-cover sm:h-72"
        />

        <div class="relative border border-gray-100 bg-white p-6">
          <div class="flex justify-between">
            <h3 class="text-sm font-medium text-gray-900">
              <%= product[i].name %>
            </h3>
            <p class="text-sm text-gray-700">â‚¹<%= product[i].price %></p>
          </div>
        </div>
      </a>
      <% } %>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const dropdownButton = document.getElementById("dropdownDefaultButton");
    const dropdownMenu = document.getElementById("dropdown");

    const sortingPreference = localStorage.getItem("sortingPreference");

    if (sortingPreference) {
      sortBy(sortingPreference);
    }

    dropdownButton.addEventListener("click", function () {
      dropdownMenu.classList.toggle("hidden");
    });
  });

  function sortBy(order) {
    $.ajax({
      url: "/user/allProducts",
      method: "post",
      data: { sortBy: order },
      success: (res) => {
        if (res && res.products) {
          // Update the product grid with the sorted products
          const productGrid = document.getElementById("productGrid");
          productGrid.innerHTML = ""; // Clear the existing products
          res.products.forEach((product) => {
            productGrid.innerHTML += `
            <a href="/user/singleProductDetails/${product._id}" class="group relative h-[370px] block overflow-hidden">
              <img src="/img/products/${product.frontImage}" alt="" class="h-1.5 w-full object-cover sm:h-72" />
              <div class="relative border border-gray-100 bg-white p-6">
                <div class="flex justify-between">
                  <h3 class="text-sm font-medium text-gray-900">${product.name}</h3>
                  <p class="text-sm text-gray-700">â‚¹${product.price}</p>
                </div>
              </div>
            </a>
          `;
          });

          localStorage.setItem("sortingPreference", order);

          // Swal.fire({
          //   toast: true,
          //   icon: "success",
          //   position: "top-right",
          //   showConfirmButton: false,
          //   timer: 500,
          //   animation: true,
          //   title: "Sorted",
          // });
        }
      },
    });
  }

  // Filtering of the product

  let displayProduct = async (allCheckFilter = []) => {
    const productGrid = document.getElementById("productGrid");
    productGrid.innerHTML = ""; // Clear the existing products
    let brandFilter = [];
    let categoryFilter = [];
    let sizeFilter = [];

    console.log("all check filter - ", allCheckFilter);
    allCheckFilter.forEach((filter) => {
      const [type, value] = filter.split("-");

      if (type === "brand") {
        brandFilter.push(value);
      } else if (type === "category") {
        categoryFilter.push(value);
      } else if (type === "size") {
        sizeFilter.push(parseInt(value));
      }
    });

    $.ajax({
      url: '/user/filterProducts',
      method: 'post',
      data: {
        brandFilter: brandFilter,
        categoryFilter: categoryFilter,
        sizeFilter: sizeFilter,
      },
      success: (res) => {
        if (res && res.products) {
          // Update the product grid with the filtered products
          res.products.forEach((product) => {
            productGrid.innerHTML += `
              <a href="/user/singleProductDetails/${product._id}" class="group relative h-[370px] block overflow-hidden">
                <img src="/img/products/${product.frontImage}" alt="" class="h-1.5 w-full object-cover sm:h-72" />
                <div class="relative border border-gray-100 bg-white p-6">
                  <div class="flex justify-between">
                    <h3 class="text-sm font-medium text-gray-900">${product.name}</h3>
                    <p class="text-sm text-gray-700">â‚¹${product.price}</p>
                  </div>
                </div>
              </a>
            `;
          });
        }
      },
    });
  };

  displayProduct();

  document.addEventListener("DOMContentLoaded", function () {
    let checkInput = document.querySelectorAll('input[type="checkbox"]');
    let checkedData = [];

    checkInput.forEach((checkbox) => {
      checkbox.addEventListener("change", function () {
        checkedData = Array.from(checkInput)
          .filter((checkbox) => checkbox.checked)
          .map((checkbox) => checkbox.value);

        displayProduct(checkedData);
      });
    });
  });
</script>

<%- include("../partials/userFooter.ejs")%>
